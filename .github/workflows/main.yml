name: 'publish'

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload Release to Public Repository
        if: success()
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Get the release assets
          ASSETS_DIR="release-assets"
          mkdir -p $ASSETS_DIR

          # Copy the built assets to the directory
          if [ "${{ matrix.platform }}" == "windows-latest" ]; then
            cp src-tauri/target/release/bundle/msi/*.msi $ASSETS_DIR/
            cp src-tauri/target/release/bundle/nsis/*.exe $ASSETS_DIR/
          elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
            cp src-tauri/target/release/bundle/dmg/*.dmg $ASSETS_DIR/
          elif [ "${{ matrix.platform }}" == "ubuntu-22.04" ]; then
            cp src-tauri/target/release/bundle/deb/*.deb $ASSETS_DIR/
            cp src-tauri/target/release/bundle/appimage/*.AppImage $ASSETS_DIR/
          fi

          # Get the version from the tag
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')

          # Create release in the public repository
          gh release create "app-v${VERSION}" \
            --repo "monsieursam/gitaurora-release" \
            --title "App v${VERSION}" \
            --notes "See the assets to download this version and install." \
            --draft \
            $ASSETS_DIR/*
